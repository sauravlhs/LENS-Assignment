name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
      
      - name: Install Jest Globally
        run: npm install -g jest

      - name: Run Tests
        run: jest --passWithNoTests  # Installing jest explicitly

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/lensassignment:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/lensassignment:latest

  provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'

      - name: Terraform Init
        run: terraform init
        working-directory: ../terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ../terraform
        env:
          creds: ${{ secrets.AZURE_CREDENTIALS }}     

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Application to AKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Install NGINX Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install nginx-ingress ingress-nginx/ingress-nginx \
            --namespace ingress-basic \
            --create-namespace \
            --set controller.replicaCount=2 \
            --set controller.nodeSelector."kubernetes\.io/os"=linux \
            --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-resource-group"="${{ secrets.AZURE_RESOURCE_GROUP }}"

      - name: Deploy Ingress Resource
        run: kubectl apply -f k8s/ingress.yaml  

      - name: Set up Horizontal Pod Autoscaler
        run: |
          kubectl autoscale deployment lensassignment-deployment --cpu-percent=70 --min=1 --max=5


      # Notify on Success
      - name: Slack Notification - Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":" Build and deployment succeeded!"}' $SLACK_WEBHOOK_URL

      # Notify on Failure
      - name: Slack Notification - Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":" Build or deployment failed!"}' $SLACK_WEBHOOK_URL

  
