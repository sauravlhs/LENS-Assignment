name: CI/CD Pipeline to Azure

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Jest Globally
        run: npm install -g jest

      - name: Run Tests
        run: jest --passWithNoTests

      - name: Log in to Azure using Azure CLI
        uses: azure/cli-action@v1
        with:
          azcliversion: '2.34.0'
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/lensassignment:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/lensassignment:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure using Azure CLI
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure AKS Set up
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl create secret docker-registry acr-secret \
            --docker-server=${{ secrets.AZURE_ACR_LOGIN_SERVER }} \
            --docker-username=${{ secrets.AZURE_ACR_USERNAME }} \
            --docker-password=${{ secrets.AZURE_ACR_PASSWORD }} \
            --namespace default
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Set up Horizontal Pod Autoscaler
        run: |
          kubectl autoscale deployment lensassignment-deployment --cpu-percent=50 --min=1 --max=10

      - name: Slack Notification - Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build and deployment to Azure AKS succeeded!"}' $SLACK_WEBHOOK_URL

      - name: Slack Notification - Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build or deployment to Azure AKS failed!"}' $SLACK_WEBHOOK_URL
