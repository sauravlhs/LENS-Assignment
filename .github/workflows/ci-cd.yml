name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
      
      - name: Install Jest Globally
        run: npm install -g jest


      - name: Run Tests
        run: jest --passWithNoTests  # installing jest expilictally.

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/lensassignment:latest . || echo "Docker build failed"


      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/lensassignment:latest || echo "Docker push failed"


      # Notify on Success
      - name: Slack Notification - Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"✅ Build and deployment succeeded!"}' $SLACK_WEBHOOK_URL

      # Notify on Failure
      - name: Slack Notification - Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"❌ Build or deployment failed!"}' $SLACK_WEBHOOK_URL



    #  - name: Push to Google Container Registry
    #    env:
     #     GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      #    GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
       # run: |
      #    echo "$GCP_SA_KEY" | base64 --decode > "${HOME}/gcloud.json"
     #     gcloud auth activate-service-account --key-file="${HOME}/gcloud.json"
       #   gcloud --quiet auth configure-docker
        #  docker tag lensassignment:latest gcr.io/${GCP_PROJECT_ID}/lensassignment:latest
         # docker push gcr.io/${GCP_PROJECT_ID}/lensassignment:latest

 # deploy:
  #  needs: build
   # runs-on: ubuntu-latest
    #steps:
     # - name: Deploy to GCP Cloud Run
      #  run: ./deploy.sh  # Add deploy script to deploy to Cloud Run
